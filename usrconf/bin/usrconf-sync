#!/bin/bash --posix

##
##  Goal:   semi-automate push/pull of application configurations between hosts
##              cheap and cheerful synchronisation support
##
##  Use:    source usrconf-sync
##
##  NB:     The caller must source functions etc Ã  la usrconf script.
##

function defineSteps
{
    local major="$1"; shift;
    local minor=0;

    minor=$((minor+1));
    pullFirefox=$major.$minor;
    minor=$((minor+1));
    pushFirefox=$major.$minor;

    minor=$((minor+1));
    pullThunderbird=$major.$minor;
    minor=$((minor+1));
    pushThunderbird=$major.$minor;

    minor=$((minor+1));
    pullPidgin=$major.$minor;
    minor=$((minor+1));
    pushPidgin=$major.$minor;

    minor=$((minor+1));
    pullKnode=$major.$minor;
    minor=$((minor+1));
    pushKnode=$major.$minor;
}

function checkSetup
{
    if [[ -r "bin/usrconf.conf" ]]; then
        source "bin/usrconf.conf";
    else
        note 'bin/usrconf.conf not found';
        exit 1;
    fi

    for name in remoteUser remoteHost remoteProfile remoteLogin; do
        if eval '${'"${name}"'}' 2> /dev/null; then
            note '${'"${name}"'} not defined';
            exit 1;
        fi
    done
}

function pullConfiguration
{
    local src="$1"; shift;
    local dst=${1-$src}; shift;

    local flags="-ax --delete";
    local excludes;

    if [[ -d "${dst}" ]]; then
        flags+=" --safe-links";
        excludes=${dst%/}/rsync.excludes;

        if [[ -r "${excludes}" ]]; then
            flags+=" --exclude-from=${excludes}";
        fi
    fi

    DoOrDie rsync ${flags} "${remoteLogin}":"${src}" "${dst}";
}

function pushConfiguration
{
    DoOrDie ssh "${remoteLogin}" bash -l \''${HOME}'/bin/usrconf "$@"\';
}

function adjustMozillaProfile
{
    local app="$1"; shift;

    cd ".mozilla/${app}/${localProfile}";
    DoOrDie sed -e "s~${remoteProfile}~${localProfile}~g" -e "s~/home/${remoteUser}~${HOME}~g" -i "$@";
    cd -;
}

function syncConf
{
    local major="$1"; shift;
    defineSteps $major;

    local localProfile="${USER}.${HOSTNAME}";
    local profileFiles="extensions.ini extensions.json prefs.js search.json";

    case "$1" in
      ($major | sync)
        listOptions usrconf-sync "$1";
        quit;
        ;;

      ($pullFirefox | pullFirefox)
        step="$pullFirefox pullFirefox";
        note "Pull firefox configuration from ${remoteLogin} ...";

        checkSetup;

        pullConfiguration .mozilla/firefox/{${remoteProfile},${localProfile}}/;

        adjustMozillaProfile firefox ${profileFiles};
        ;;

      ($pushFirefox | pushFirefox)
        step="$pushFirefox pushFirefox";
        note "Push firefox configuration to ${remoteLogin} ...";

        checkSetup;

        pushConfiguration pullFirefox;
        ;;

      ($pullThunderbird | pullThunderbird)
        step="$pullThunderbird pullThunderbird";
        note "Pull thunderbird configuration from ${remoteLogin} ...";

        checkSetup;

        pullConfiguration .davmail.properties;
        pullConfiguration .mozilla/thunderbird/{${remoteProfile},${localProfile}}/;
        pullConfiguration Mail/;

        adjustMozillaProfile thunderbird ${profileFiles} signature.html;
        ;;

      ($pushThunderbird | pushThunderbird)
        step="$pushThunderbird pushThunderbird";
        note "Push thunderbird configuration to ${remoteLogin} ...";

        checkSetup;

        pushConfiguration pullThunderbird;
        ;;

      ($pullPidgin | pullPidgin)
        step="$pullPidgin pullPidgin";
        note "Pull pidgin configuration from ${remoteLogin} ...";

        checkSetup;

        pullConfiguration .purple/;
        ;;

      ($pushPidgin | pushPidgin)
        step="$pushPidgin pushPidgin";
        note "Push pidgin configuration to ${remoteLogin} ...";

        checkSetup;

        pushConfiguration pullPidgin;
        ;;

      ($pullKnode | pullKnode)
        step="$pullKnode pullKnode";
        note "Pull KNode configuration and state from ${remoteLogin} ...";

        checkSetup;

        pullConfiguration .kde/share/config/knoderc .kde/share/apps/knode/;
        ;;

      ($pushKnode | pushKnode)
        step="$pushKnode pushKnode";
        note "Push KNode configuration and state to ${remoteLogin} ...";

        checkSetup;

        pushConfiguration pullKnode;
        ;;

      ($major.99)
        step="$major.99 sanityCheck";
        note "Checking sync ...";
        listLoggedSteps $major | while read step name status; do
            printf "%-7s %-23s %s\n" $step $name $status;
            case "$installDist $name" in
              (*)
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions usrconf-sync $major;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
