#!/bin/bash --posix

##
##  Goal:   semi-automate user configuration of home directories
##
##  Use:    source usrconf-home
##
##          homeConf step-number-or-name
##
##  NB:     This script is expected to be sourced by the usrconf script:
##          it is not expected to be used standalone.
##
##  This script sets up home directories so they contain common subdirectories,
##  user specific links (e.g. to old Windows home directories) and a number of
##  user specific hidden files that are usefully carried forward from one
##  installation to the next.
##

function defineSteps
{
    local major="$1"; shift;
    local minor=0;

    minor=$((minor+1));
    homeDirectories=$major.$minor;

    minor=$((minor+1));
    homeLinks=$major.$minor;

    minor=$((minor+1));
    homeHplip=$major.$minor;

    minor=$((minor+1));
    homeHiddenFiles=$major.$minor;
}

function homeConf
{
    local major="$1"; shift;
    defineSteps $major;

    case "$1" in
      ($major | home)
        listOptions usrconf-home "$1";
        quit;
        ;;

      ($homeDirectories | homeDirectories)
        step="$homeDirectories homeDirectories";
        note "Create top level desktop directories ...";

        DoOrDie mkdir -p Desktop Documents Downloads;
        ;;

      ($homeLinks | homeLinks)
        step="$homeLinks homeLinks";
        note "Create links to shared volumes ...";

        DoOrDie mkdir -p Philately Pictures;

        DoOrDie ln -sf /media/share/philately/ Philately/shared;

        case "${USER}" in
          (ber)
            DoOrDie ln -sf /media/image/35mm/ Pictures/35mm;
            DoOrDie ln -sf /media/image/glassSlides/ Pictures/glassSlides;
            DoOrDie ln -sf /media/image/ulverston/ Pictures/ulverston;
            ;;

          (pbr)
            DoOrDie ln -sf /media/share/images/Camera/ Pictures/Camera;
            ;;
        esac

        local myDocuments="/media/win/w2kdata/Documents and Settings/${USER}/My Documents/";

        [[ -e Documents/Windows ]] && DoOrDie rm Documents/Windows;
        [[ -d "${myDocuments}" ]] && DoOrDie ln -sf "${myDocuments}" Documents/Windows;
        ;;

      ($homeHplip | homeHplip)
        step="$homeHplip homeHplip";
        note "Hide hplip task tray icon ...";

        DoOrDie mkdir -m 700 -p .hplip;
        DoOrDie cp -pR "${installHome}/.hplip/"* .hplip;
        ;;

      ($homeHiddenFiles | homeHiddenFiles)
        step="$homeHiddenFiles homeHiddenFiles";
        note "Install user specific hidden files ...";

        local file files="";

        files+=" .face.icon";

        files+=" .reportbugrc";

        files+=" .home.excludes keep";
        DoOrDie touch .home.excludes;

        files+=" .gitconfig .gitignore .gitattributes";

        for file in ${files}; do
            if [[ -d "${installUser}/${file}" ]]; then
                DoOrDie cp -pfr "${installUser}/${file}" .;
            elif [[ -r "${installUser}/${file}" ]]; then
                DoOrDie cp -pf "${installUser}/${file}" .;
            fi
        done
        ;;

      ($major.99)
        step="$major.99 sanityCheck";
        note "Checking home ...";
        listLoggedSteps $major | while read step name status; do
            printf "%-7s %-23s %s\n" $step $name $status;
            case "$installDist $name" in
              (*)
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions usrconf-home $major;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
