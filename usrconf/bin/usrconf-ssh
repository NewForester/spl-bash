#!/bin/bash --posix

##
##  Goal:   semi-automate user configuration of ssh
##
##  Use:    source usrconf-ssh
##
##  NB:     The caller must source functions etc Ã  la usrconf script.
##

function defineSteps
{
    local major="$1"; shift;
    local minor=0;

    minor=$((minor+1));
    sshNewKey=$major.$minor;

    minor=$((minor+1));
    sshSetup=$major.$minor;
}

function sshConf
{
    local major="$1"; shift;
    defineSteps $major;

    local key keylist="ecdsa dsa";

    case "$1" in
      ($major | ssh)
        listOptions usrconf-ssh "$1";
        quit;
        ;;

      ($sshNewKey | sshNewKey)
        step="$sshNewKey sshNewKey";
        note "Generate new ssh key for ${USER} ...";

        DoOrDie mkdir -p "${installUser}/.ssh";

        cd "${installUser}/.ssh" > /dev/null;

            if [[ ! -s authorized_keys ]]; then
                echo "# authorised keys for user ${USER}" >> authorized_keys;
            fi

            if [[ ! -s authorized_keys ]]; then
                error "failed to create authorized_keys file";
            fi

            for key in ${keylist}; do
                DoOrDieHere ssh-keygen -t ecdsa -f "${HOSTNAME}_${key}" < /dev/null;

                DoOrDie sed -i authorized_keys -e "'/${HOSTNAME}\$/d'";
                DoOrDie sed -i authorized_keys -e "'\$r ${HOSTNAME}_${key}.pub'";

                break;
            done

        cd - > /dev/null;

        fini="now run usrconf sshSetup for ${USER} on all hosts";
        ;;

      ($sshSetup | sshSetup)
        step="$sshSetup sshSetup";
        note "Configure ssh using existing keys ...";

        DoOrDie mkdir -m 700 -p .ssh;
        DoOrDie chmod g-w . .ssh;

        cd .ssh > /dev/null;

            DoOrDie rm -f "${HOSTNAME}_"* "id_"*;

            for key in ${keylist}; do
                if [[ -e "${installUser}/.ssh/${HOSTNAME}_${key}" ]]; then
                    DoOrDie cp -pf "${installUser}/.ssh/${HOSTNAME}_${key}"* .;
                    DoOrDie ln -sf "${HOSTNAME}_${key}" "id_${key}";
                    break;
                fi
            done

            DoOrDie cp -pf "${installUser}/.ssh/authorized_keys" .;
            DoOrDie rm -f known_hosts;

        cd - > /dev/null;
        ;;

      ($major.99)
        step="$major.99 sanityCheck";
        note "Checking ssh ...";
        listLoggedSteps $major | while read step name status; do
            printf "%-7s %-23s %s\n" $step $name $status;
            case "$installDist $name" in
              (*)
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions usrconf-ssh $major;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
