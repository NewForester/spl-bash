#!/bin/bash --posix

##
##  Goal:   semi-automate system configuration of samba
##
##  Use:    source sysconf-samba
##
##  NB:     The caller must source functions etc Ã  la sysconf script.
##

function defineSteps
{
    local major="$1"; shift;
    local minor=0;

    minor=$((minor+1));
    sambaInstall=$major.$minor;

    minor=$((minor+1));
    sambaConfigure=$major.$minor;

    minor=$((minor+1));
    sambaPasswords=$major.$minor;

    minor=$((minor+1));
    sambaConfInstall=$major.$minor.I;
    sambaConfUpdate=$major.$minor.U;
    sambaConfPatch=$major.$minor.P;
    sambaConfShare=$major.$minor.S;
}

function smbUpdate
{
    local abortok answer;

    cd keep/etc/samba > /dev/null;

        [[ -r smb.conf.patch ]] || exit 1;
        [[ -r smb.conf.shares ]] || exit 1;

        echo "... preparing ...";
        [[ -r smb.conf.old ]] && mv smb.conf.old smb.conf;

        case "$1" in
          ("install")
            cp -p /etc/samba/smb.conf .;
            cp -p smb.conf{,.${RELEASE}};
            ;;
          ("update")
            cp -p smb.conf{,.old};
            cp -p /etc/samba/smb.conf .;
            cp -p smb.conf{,.${RELEASE}};
            ;;
          ("patch" | "share")
            cp -p smb.conf{,.old};
            cp -p smb.conf{.${RELEASE},};
            ;;
          (*)
            error "Do not know how to \"${update}\" ...";
            note "... bailing";
            exit 1;
        esac

        echo "... patch package maintainer's smb.conf ...";
        rm -f smb.conf.rej smb.conf.orig;
        patch < smb.conf.patch || exit 1;
        sed -i smb.conf -e "/workgroup =/d" -e "/server string =/d" || exit 1;

        echo "... add host specific shares ...";
        cat smb.conf smb.conf.shares > smb.conf.master || exit 1;

        echo "... patch server string ...";
        sed -i smb.conf.master -e "/server string = /s~/etc/issue.net~$(cat /etc/issue.net)~" || exit 1;

        echo "... generating new smb.conf ...";
        yes | testparm smb.conf.master > smb.conf || exit 1;

        # double check with user

        if [[ ! -r smb.conf.old ]]; then
            less smb.conf;
        elif cmp -s smb.conf{,.old}; then
            note "... effectively no change ...";
            mv smb.conf{.old,};
            if ! cmp -s smb.conf /etc/samba/smb.conf; then
                note "... but deployment necessary";
            else
                abortok="y";
            fi
        else
            diff -Naur smb.conf.old smb.conf;
        fi

        read -p "Deploy new configuration [y/n] ? " answer;
        answer="${answer,}";

        if [[ "${answer#y}" == "${answer}" ]]; then
            note "... aborting ...";
            [[ -r smb.conf.old ]] && mv smb.conf{.old,};
            [[ "${abortok}" != "y" ]] && exit 1;
            return 0;
        else
            note "... deploying ...";
            rm -f smb.conf.orig smb.conf.old;

            DoOrDie Deploy /etc/samba/smb.conf;
        fi

        if [[ -e /etc/init.d/smbd ]]; then
            DoOrDie sudo service smbd reload;
        elif [[ -e /etc/init.d/samba ]]; then
            DoOrDie sudo service samba reload;
        fi

    cd - > /dev/null;
    return 0;
}

function updateRelease
{
    if [[ ! -e "$1" ]]; then
        local old reply;

        if ls "${1/%?/}"? &> /dev/null; then
            for old in $(ls -r "${1/%?/}"?); do
                if [[ ! -h "${old}" ]]; then
                    break;
                fi
            done

            old="${old##*/}";
            note ${old};
            read -p "Old release copy good ? [y/n] " reply;
            if [[ "${reply^}" == "Y" ]]; then
                ln -sf ${old} ${1};
            fi
        fi
    fi
}

function sambaConf
{
    local major="$1"; shift;
    defineSteps $major;

    case "$1" in
      ($major | samba)
        listOptions sysconf-samba "$1";
        quit;
        ;;

      ($sambaInstall | sambaInstall)
        step="$sambaInstall sambaInstall";
        note "Install samba packages ...";

        installPackage samba-common smbclient samba cifs-utils;

        DoOrDie SaveCurrent /etc/group;
        ;;

      ($sambaConfigure | sambaConfigure)
        step="$sambaConfigure sambaConfigure";
        note "Configure samba ...";

        echo "... install lmhosts";
        DoOrDie InstallOurOwn /etc/samba/lmhosts;

        echo "... fetch our configuration files";
        DoOrDie FetchOurOwn /etc/samba/smb.conf.{patch,shares};

        echo "... checking samba configuration";

        cd keep/etc/samba > /dev/null;

            updateRelease "smb.conf.${RELEASE}";

            if [[ ! -r "smb.conf.${RELEASE}" ]]; then
                if [[ ! -r smb.conf ]]; then
                    note "... looks like a new installation";
                    fini="suggest: sysconf sambaConfInstall";
                elif ! cmp -s smb.conf /etc/samba/smb.conf; then
                    note "... looks like a package update";
                    fini="suggest: sysconf sambaConfUpdate";
                else
                    note "... nothing seems to have changed";
                fi
            else
                if ! cmp -s smb.conf /etc/samba/smb.conf; then
                    note "... looks like a package update";
                    fini="suggest: sysconf sambaConfUpdate";
                elif [[ smb.conf.patch -nt smb.conf ]]; then
                    note "... looks like a patch change";
                    fini="suggest: sysconf sambaConfPatch";
                elif [[ smb.conf.shares -nt smb.conf ]]; then
                    note "... looks like a share change";
                    fini="suggest: sysconf sambaConfShare";
                else
                    note "... nothing seems to have changed";
                fi
            fi

        cd - > /dev/null;
        ;;

      ($sambaPasswords | sambaPasswords)
        step="$sambaPasswords sambaPasswords";
        note "Create samba password (tdbsam) database ...";

        CopyToKeep --sudo /var/lib/samba/passdb.tdb;
        InstallOurOwn --sudo /var/lib/samba/passdb.tdb;
        ;;

      ($sambaConfInstall | sambaConfInstall)
        step="$sambaConfInstall sambaConfInstall";
        note "Generate samba configuration for new installation ...";

        smbUpdate "install";
        ;;

      ($sambaConfUpdate | sambaConfUpdate)
        step="$sambaConfUpdate sambaConfUpdate";
        note "Regenerate samba configuration after package upgrade ...";

        smbUpdate "update";
        ;;

      ($sambaConfPatch | sambaConfPatch)
        step="$sambaConfPatch sambaConfPatch";
        note "Regenerate samba configuration after patch change ...";

        smbUpdate "patch";
        ;;

      ($sambaConfShare | sambaConfShare)
        step="$sambaConfShare sambaConfShare";
        note "Regenerate samba configuration after share change ...";

        smbUpdate "share";
        ;;

      ($major.99)
        step="$major.99 sanityCheck";
        note "Checking samba ...";
        listLoggedSteps $major | while read step name status; do
            printf "%-7s %-23s %s\n" $step $name $status;
            case "$installDist $name" in
              (*sambaInstall)
                CheckCurrent /etc/{group,passwd};
                ;;
              (*sambaConfigure)
                CheckOurOwn /etc/samba/lmhosts;
                CheckMaster /etc/samba/smb.conf.{patch,shares};
                ;;
              (*sambaPasswords)
                CheckOriginal --sudo /var/lib/samba/passdb.tdb;
                CheckOurOwn --sudo /var/lib/samba/passdb.tdb;
                ;;
              (*sambaConfInstall | *sambaConfUpdate | *sambaConfPatch | *sambaConfShare)
                CheckDeployed /etc/samba/smb.conf;
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions sysconf-samba $major;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
