#!/bin/bash --posix

##
##  Goal:   semi-automate system configuration of encrypted volumes
##
##  Use:    source sysconf-encrypt
##
##  NB:     The caller must source functions etc Ã  la sysconf script.
##

function defineSteps
{
    local major="$1"; shift;
    local minor=0;

    minor=$((minor+1));
    encryptInstall=$major.$minor;

    minor=$((minor+1));
    encryptConfigure=$major.$minor;

    minor=$((minor+1));
    encryptCreate=$major.$minor;

    minor=$((minor+1));
    encryptMount=$major.$minor;

    minor=$((minor+1));
    encryptUmount=$major.$minor;
}

function encryptConf
{
    local major="$1"; shift;
    defineSteps $major;

    case "$1" in
      ($major | encrypt)
        listOptions sysconf-encrypt "$1";
        quit;
        ;;

      ($encryptInstall | encryptInstall)
        step="$encryptInstall encryptInstall";
        note "Install the cryptsetup package ...";

        installPackage cryptsetup;
        ;;

      ($encryptConfigure | encryptConfigure)
        step="$encryptConfigure encryptConfigure";
        note "Configure the cryptsetup package ...";

        DoOrDie CopyToKeep /etc/crypttab;
        DoOrDie InstallOurOwn /etc/crypttab;
        ;;

      ($encryptCreate | encryptCreate)
        step="$encryptCreate encryptCreate";
        note "Create the encrypted volume ...";

        DoOrDie sudo cryptsetup --verbose --verify-passphrase luksFormat /dev/md0;
        DoOrDie sudo cryptsetup luksOpen /dev/md0 md0_crypt;
        DoOrDie sudo mkfs.ext3 -L crypt /dev/mapper/md0_crypt;
        ;;

      ($encryptMount | encryptMount)
        step="$encryptMount encryptMount";
        note "Start and mount the encrypted volume ...";

        DoOrDie sudo service cryptdisks force-start;
        DoOrDie sudo mkdir -p /crypt;
        DoOrDie mount /crypt;
        ;;

      ($encryptUmount | encryptUmount)
        step="$encryptUmount encryptUmount";
        note "Unmount and stop the encrypted volume ...";

        DoOrDie umount /crypt;
        DoOrDie sudo service cryptdisks stop;
        ;;

      ($major.99)
        step="$major.99 sanityCheck";
        note "Checking encrypt ...";
        listLoggedSteps $major | while read step name status; do
            printf "%-7s %-23s %s\n" $step $name $status;
            case "$installDist $name" in
              (*encryptInstall)
                CheckCurrent /etc/{passwd,group};
                ;;
              (*encryptConfigure)
                CheckOriginal /etc/crypttab;
                CheckOurOwn /etc/crypttab;
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions sysconf-encrypt $major;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
