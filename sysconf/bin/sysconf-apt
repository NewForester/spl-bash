#!/bin/bash --posix

##
##  Goal:   semi-automate system configuration of apt
##
##  Use:    source sysconf-apt
##
##  NB:     The caller must source functions etc Ã  la sysconf script.
##

function defineSteps
{
    local major="$1"; shift;
    local minor=0;

    minor=$((minor+1));
    aptConfigure=$major.$minor;

    minor=$((minor+1));
    squidInstall=$major.$minor;

    minor=$((minor+1));
    squidConfigure=$major.$minor;

    minor=$((minor+1));
    squidProxy=$major.$minor;

    minor=$((minor+1));
    aptMultimedia=$major.$minor.M;
    aptBackports=$major.$minor.B;

    minor=$((minor+1));
    aptUpdate=$major.$minor;
}

function aptConf
{
    local major="$1"; shift;
    defineSteps $major;

    case "$1" in
      ($major | apt | squid)
        listOptions sysconf-apt "$1";
        ;;

      ($aptConfigure | aptConfigure)
        step="$aptConfigure aptConfigure";
        note "Configure apt ...";

        echo "... no source packages please";
        DoOrDie CopyToKeep /etc/apt/sources.list;
        DoOrDie cp -pf "sources.list.${RELEASE}" keep/etc/apt/sources.list;
        DoOrDie sed -i keep/etc/apt/sources.list -e "'/deb-src/s/^/# /'";
        DoOrDie Deploy /etc/apt/sources.list;

        echo "... backup original configuration files";
        if [[ -e /etc/apt/apt.conf ]]; then
            DoOrDie CopyToKeep /etc/apt/apt.conf;
        fi

        echo "... cache maintenance once a week";
        DoOrDie InstallOurOwn /etc/apt/apt.conf.d/90periodic;
        ;;

      ($squidInstall | squidInstall)
        step="$squidInstall squidInstall";
        note "Install squid caching proxy ...";

        installPackage squid;
        ;;

      ($squidConfigure | squidConfigure)
        step="$squidConfigure squidConfigure";
        note "Configure squid caching proxy ...";

        DoOrDie CopyToKeep --sudo /etc/squid/squid.conf;
        DoOrDie ApplyPatch --sudo /etc/squid/squid.conf squid.apt;

        DoOrDie sudo service squid reload;
        ;;

      ($squidProxy | squidProxy)
        step="$squidProxy squidProxy";
        note "Configure apt to use squid proxy ...";

        DoOrDie InstallOurOwn /etc/apt/apt.conf.d/80proxy;
        DoOrDie sudo rm -f /etc/apt/apt.conf;
        ;;

      ($aptMultimedia | aptMultimedia)
        step="$aptMultimedia aptMultimedia";
        note "Configure multimedia repository ...";

        DoOrDie InstallOurOwn /etc/apt/sources.list.d/${installRelease}-multimedia.list;

        installKeyring deb-multimedia-keyring;
        ;;

      ($aptBackports | aptBackports)
        step="$aptBackports aptBackports";
        note "Configure backports repository ...";

        DoOrDie InstallOurOwn /etc/apt/sources.list.d/${installRelease}-backports.list;

        installKeyring pkg-mozilla-archive-keyring;
        ;;

      ($aptUpdate | aptUpdate)
        step="$aptUpdate aptUpdate";
        note "Make sure installation is up to date ...";

        refreshPackages;
        ;;

      ($major.99)
        step="$major.99 sanityCheck";
        note "Checking apt ...";
        listLoggedSteps $major | while read step name status; do
            printf "%-7s %-23s %s\n" $step $name $status;
            case "$installDist $name" in
              (*aptConfigure)
                CheckOriginal /etc/apt/sources.list;
                CheckDeployed /etc/apt/sources.list;
                CheckOriginal --opt /etc/apt/apt.conf;
                CheckOurOwn /etc/apt/apt.conf.d/90periodic;
                ;;
              (*squidInstall)
                CheckCurrent /etc/{passwd,group};
                ;;
              (*squidConfigure | *aptSquidConfigure)
                CheckOriginal --sudo /etc/squid/squid.conf;
                CheckPatch --sudo /etc/squid/squid.conf squid.apt;
                ;;
              (*squidProxy | *aptProxy)
                CheckOurOwn /etc/apt/apt.conf.d/80proxy;
                ;;
              (*aptMultimedia)
                CheckOurOwn /etc/apt/sources.list.d/${installRelease}-multimedia.list;
                ;;
              (*aptBackports)
                CheckOurOwn /etc/apt/sources.list.d/${installRelease}-backports.list;
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions sysconf-apt $major;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
