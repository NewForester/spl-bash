#!/bin/bash --posix

##
##  Goal:   semi-automate system configuration of applications
##
##  Use:    source sysconf-lang
##
##  NB:     The caller must source functions etc Ã  la sysconf script.
##

function defineSteps
{
    local major="$1"; shift;
    local minor=0;

    minor=$((minor+1));
    buildEssential=$major.$minor;

    minor=$((minor+1));
    langPython3=$major.$minor;
    pythonModule=$major.$minor.M;

    minor=$((minor+1));
    langPhp=$major.$minor;
    phpModule=$major.$minor.M;
}

function phpPhar
{
    local url="$1";
    local prog="$2";

    local archive="${url##*/}";

    cd /usr/local/bin > /dev/null;
        DoOrDie sudo rm -f "${archive}";

        DoOrDie sudo wget "${url}";

        DoOrDie sudo chmod +x "${archive}";
        DoOrDie sudo ln -sf "${archive}" "${prog}";
    cd - > /dev/null;
}

function phpLint
{
    local url="$1";
    local prog="$2";

    local archive="${url##*/}";
    local dir="${archive%%.tar.gz*}";

    DoOrDie mkdir -p /opt/php/;

    cd /opt/php/ > /dev/null;
        DoOrDie rm -f "${archive}";
        DoOrDie wget "${url}";

        DoOrDie rm -fr "${dir}";
        DoOrDie tar -xf "${archive}";
        DoOrDie rm -f "${archive}";
    cd - > /dev/null;

    cd "/opt/php/${dir}"; > /dev/null;
        DoOrDie sed -i php -e "'s/opt\/php/usr/'";
    cd - > /dev/null;

    DoOrDie sudo ln -sf "/opt/php/${dir}/phpl" "/usr/local/bin/${prog}";
}

function langConf
{
    local major="$1"; shift;
    defineSteps $major;

    local module="$2";

    case "$1" in
      ($major | build | lang)
        listOptions sysconf-lang "$1";
        quit;
        ;;

      ($buildEssential | buildEssential)
        step="$buildEssential buildEssential";
        note "Install C/C++ compiler and man pages 2 & 3";

        installPackage manpages-dev build-essential ccache;
        ;;

      ($langPython3 | langPython3)
        step="$langPython3 langPython3";
        note "Install Python 3 essentials";

        installPackage python3 python3-doc python3-pip;

        note "$(python --version 2>&1) installed";
        note "... documentation installed";
        note "... module installer (pip) installed";
        note "... pydoc  - already installed";
        note "... pylint - suggest sysconf pythonModule pylint";
        note "... pyunit - already installed";
        ;;

      ($pythonModule | pythonModule)
        case "${module,,}" in
          (pydoc)
            note "pydoc already installed - use pydoc3 from the command line";
            quit;
            ;;
          (pyunit)
            note "pyunit already installed - use import unittest in test modules";
            quit;
            ;;
        esac

        step="$pythonModule pythonModule:${module}";
        note "Install Python 3 module ${module}";

        DoOrDie sudo pip3 install ${module};
        ;;

      ($langPhp | langPhp)
        step="$langPhp langPhp";
        note "Install PHP 5 essentials";

        installPackage php5 php-doc php-pear;

        note "$(php --version | sed -e '1!d' -e 's/-.*//') installed";
        note "... documentation installed";
        note "... module installer (pear) installed";
        note "... phpdoc  - suggest sysconf phpModule PHPDoc";
        note "... phplint - suggest sysconf phpModule PHPLint";
        note "... phpunit - suggest sysconf phpModule PHPUnit";
        ;;

      ($phpModule | phpModule)
        case "${module,,}" in
          (phpdoc | phpdocumentor)
            module="phpDoc";
            url=http://www.phpdoc.org/phpDocumentor.phar;
            ;;
          (phplint)
            module="PHPLint";
            url=http://www.icosaedro.it/phplint/phplint-3.0_20160307.tar.gz;
            ;;
          (phpunit)
            module="PHPUnit";
            url=https://phar.phpunit.de/phpunit-5.7.phar;
            ;;
        esac

        step="$phpModule phpModule:${module}";
        note "Install PHP 5 module ${module}";

        case "${module}" in
          (PHPLint)
            phpLint "${url}" "${module,,}";
            ;;
          (*)
            phpPhar "${url}" "${module,,}";
            ;;
        esac
        ;;

      ($major.99)
        step="$major.99 sanityCheck";
        note "Checking apps ...";
        listLoggedSteps $major | while read step name status; do
            printf "%-7s %-23s %s\n" $step $name $status;
            case "$installDist $name" in
              (*buildEssential)
                CheckCurrent /etc/{passwd,group};
                ;;
              (*lang*)
                CheckCurrent /etc/{passwd,group};
                ;;
              (*Module:*)
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions sysconf-lang $major;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
