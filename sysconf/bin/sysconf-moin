#!/bin/bash --posix

##
##  Goal:   semi-automate system configuration of moinmoin wiki software
##
##  Use:    source sysconf-moin
##
##  NB:     The caller must source functions etc Ã  la sysconf script.
##

function defineSteps
{
    local major="$1"; shift;
    local minor=0;

    minor=$((minor+1));
    moinInstall=$major.$minor;

    minor=$((minor+1));
    moinConfigure=$major.$minor;

    minor=$((minor+1));
    moinDisable=$major.$minor.D;
    moinEnable=$major.$minor.E;

    minor=$((minor+1));
    moinMyWiki=$major.$minor;

    minor=$((minor+1));
    moinLanguage=$major.$minor;

    minor=$((minor+1));
    moinTestWiki=$major.$minor.T;
    moinCustardsWiki=$major.$minor.C;
    moinItWiki=$major.$minor.I;
    moinPhilWiki=$major.$minor.P;

    minor=10;
    moinVadatechWiki=$major.$minor.V;
}

function restoreWiki
{
    local junk backup site address;

    local moinRoot="$1"; shift;

    echo "... stopping the standalone server";
    DoOrDie sudo service moin stop;

    # remove unwanted language packs
    junk="${moinRoot}/mywiki/underlay/pages/LanguageSetup/attachments/";
    if [[ -d "${junk}" ]]; then
        DoOrDie sudo rm -fr "${junk}";
    fi

    backup=/media/share/backup/current/wiki-$1.tgz;
    if [[ -d "${moinRoot}/$1" ]]; then
        DoOrDie sudo -u www-data rm -r ${moinRoot}/$1;
    fi
    if [[ -r "${backup}" ]]; then
        echo "... restore backup of the $1 wiki";
        DoOrDie sudo -u www-data tar -xzf ${backup} --exclude=text_html --exclude=underlay -C ${moinRoot};
    else
        echo "... create $1 wiki";
        DoOrDie sudo -u www-data mkdir -p ${moinRoot}/$1;
        DoOrDie sudo -u www-data cp -pR /usr/share/moin/data ${moinRoot}/$1;
        DoOrDie sudo -u www-data chmod -R ug+rwX ${moinRoot}/$1;
        DoOrDie sudo -u www-data chmod -R o-rwx ${moinRoot}/$1;
    fi

    if [[ ! -e /etc/moin/$1.py ]]; then
        echo "... configure standalone server to handle the $1 wiki";

        cd keep/etc/moin > /dev/null;

            DoOrDie cp -pf mywiki.py $1.py;
            DoOrDie sed -e s/MyWiki/\""$2"\"/ -e s/mywiki/"$1"/ -i $1.py;
            DoOrDie Deploy /etc/moin/$1.py;

            # DoOrDie does not cope well with the ( and ) in the sed expression
            # or perhaps it is just the spaces that screw it up

            site="${installLan%%-*}";

            if [[ "$1" == "${site}" ]]; then
                address="wiki.localhost";
            else
                address="$1.wiki.localhost";
            fi

            echo "   " \
            sed \
                -e '/"mywiki"/{s/ (/ #(/; p; s/ #(/ (/; s/ *#.*//}' \
                -e '/"mywiki"/s~r".*"~r"^http://'"${address}"':8080/.*$"~' \
                -e '/"mywiki"/s~mywiki~'"$1"'~' \
                -i farmconfig.py;
            sed \
                -e '/"mywiki"/{s/ (/ #(/; p; s/ #(/ (/; s/ *#.*//}' \
                -e '/"mywiki"/s~r".*"~r"^http://'"${address}"':8080/.*$"~' \
                -e '/"mywiki"/s~mywiki~'"$1"'~' \
                -i farmconfig.py || exit 1;

            case "$site" in
              (custards)
                echo "   " \
                sed -e '/"'$1'"/'"{p; s/.localhost/.$site.lan/}" \
                    -i farmconfig.py;
                sed -e '/"'$1'"/'"{p; s/.localhost/.$site.lan/}" \
                    -i farmconfig.py || exit 1;
                ;;
              (vadatech)
                echo "   " \
                sed -e '/"'$1'"/'"{p; s/.localhost/.$site.uk.lan/p; s/.uk.lan/.uk.lab/}" \
                    -i farmconfig.py;
                sed -e '/"'$1'"/'"{p; s/.localhost/.$site.uk.lan/p; s/.uk.lan/.uk.lab/}" \
                    -i farmconfig.py || exit 1;
                ;;
            esac

            DoOrDie Deploy /etc/moin/farmconfig.py;

        cd - > /dev/null;
    fi

    echo "... starting standalone server";
    DoOrDie sudo service moin start;
}

function moinConf
{
    local moinRoot="/media/work/www-data/moin";

    local major="$1"; shift;
    defineSteps $major;

    case "$1" in
      ($major | moin)
        listOptions sysconf-moin "$1";
        quit;
        ;;

      ($moinInstall | moinInstall)
        step="$moinInstall moinInstall";
        note "Install moin packages ...";

        installPackage python-moinmoin;
        ;;

      ($moinConfigure | moinConfigure)
        step="$moinConfigure moinConfigure";
        note "Configure the moin package ...";

        if [[ ! -b "/dev/${HOSTNAME}/work_www-data" ]]; then
            note "www volume does not exist ... bailing";
            quit 1;
        fi

        DoOrDie sudo -u www-data mkdir -p "${moinRoot}";
        DoOrDie sudo -u www-data chmod g+w "${moinRoot}";

        DoOrDie InstallOurOwn /etc/init.d/moin;
        DoOrDie sudo update-rc.d moin defaults;
        ;;

      ($moinDisable | moinDisable)
        step="$moinDisable moinDisable";
        note "Disable moin standalone server ...";

        DoOrDie sudo invoke-rc.d moin stop;
        DoOrDie sudo update-rc.d moin disable;
        ;;

      ($moinEnable | moinEnable)
        step="$moinEnable moinEnable";
        note "Enable moin standalone server ...";

        DoOrDie sudo update-rc.d moin enable;
        DoOrDie sudo invoke-rc.d moin start;
        ;;

      ($moinMyWiki | moinMyWiki)
        step="$moinMyWiki moinMyWiki";
        note "Create a simple wiki ...";

        echo "... create mywiki instance";
        local mywiki="${moinRoot}/mywiki";

        DoOrDie sudo -u www-data mkdir -p "${mywiki}";
        DoOrDie sudo -u www-data cp -pR /usr/share/moin/data "${mywiki}";
        DoOrDie sudo -u www-data cp -pR /usr/share/moin/underlay "${mywiki}";
        DoOrDie sudo -u www-data chmod -R ug+rwX "${mywiki}";
        DoOrDie sudo -u www-data chmod -R o-rwx "${mywiki}";

        echo "... configure standalone server to use the mywiki instance";
        DoOrDie sudo cp -pf /usr/share/moin/server/wikiserverconfig.py /etc/moin/;

        DoOrDie CopyToKeep /etc/moin/{mywiki.py,farmconfig.py,wikiserverconfig.py};
        DoOrDie ApplyPatch /etc/moin/{mywiki.py,farmconfig.py,wikiserverconfig.py};
        ;;

      ($moinLanguage | moinLanguage)
        step="$moinLanguage moinLanguage";
        note "Install the English language help package ...";

        echo "... starting standalone server";
        DoOrDie sudo service moin start;

        echo "... in a browser enter ...";
        echo "... http://${HOSTNAME}:8080/LanguageSetup ...";
        echo "... enable cookies and probably scripts ...";
        echo "... select login and create an account for ${USER} ...";
        echo "... select login and login in as ${USER} ...";
        echo "... in the browser enter ...";
        echo "... http://${HOSTNAME}:8080/LanguageSetup?action=language_setup ...";
        echo "... choose English ...";
        echo "... choose all_pages install...";
        echo "... next try sysconf moinTestWiki...";
        ;;

      ($moinTestWiki | moinTestWiki)
        step="$moinTestWiki moinTestWiki";
        note "Create/Restore the Test Wiki ...";
        restoreWiki "${moinRoot}" 'test' 'TestWiki';
        ;;

      ($moinCustardsWiki | moinCustardsWiki)
        step="$moinCustardsWiki moinCustardsWiki";
        note "Create/Restore the Custards Wiki ...";
        restoreWiki "${moinRoot}" 'custards' 'Custards';
        ;;

      ($moinItWiki | moinItWiki)
        step="$moinItWiki moinItWiki";
        note "Create/Restore the Custards IT Wiki ...";
        restoreWiki "${moinRoot}" 'it' 'Custards IT';
        ;;

      ($moinPhilWiki | moinPhilWiki)
        step="$moinPhilWiki moinPhilWiki";
        note "Create/Restore the Philately Wiki ...";
        restoreWiki "${moinRoot}" 'phil' 'Philately';
        ;;

      ($moinVadatechWiki | moinVadatechWiki)
        step="$moinVadatechWiki moinVadatechWiki";
        note "Create/Restore the Vadatech Wiki ...";
        restoreWiki "${moinRoot}" 'vadatech' 'Vadatech';
        ;;

      ($major.99)
        step="$major.99 sanityCheck";
        note "Checking moin ...";
        listLoggedSteps $major | while read step name status; do
            printf "%-7s %-23s %s\n" $step $name $status;
            case "$installDist $name" in
              (*moinInstall)
                CheckCurrent /etc/{group,passwd};
                ;;
              (*moinConfigure)
                CheckOurOwn /etc/init.d/moin;
                ;;
              (*moinMyWiki)
                CheckOriginal /etc/moin/{mywiki.py,farmconfig.py,wikiserverconfig.py};
                CheckPatch /etc/moin/{mywiki.py,farmconfig.py,wikiserverconfig.py};
                ;;
              (*moinTestWiki)
                CheckDeployed /etc/moin/test.py;
                ;;
              (*moinCustardsWiki)
                CheckDeployed /etc/moin/custards.py;
                ;;
              (*moinItWiki)
                CheckDeployed /etc/moin/it.py;
                ;;
              (*moinPhilWiki)
                CheckDeployed /etc/moin/phil.py;
                ;;
              (*moinVadatechWiki)
                CheckDeployed /etc/moin/vadatech.py;
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions sysconf-moin $major;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
