#!/bin/bash --posix

##
##  Goal:   bootstrap semi-automated system configuration
##
##  Use:    source sysconf-bootstrap
##
##  NB:     The caller must source functions etc Ã  la sysconf script.
##
##  The first three steps must be executed by-hand (copy/paste in to a console)
##  to set up an environment in which the rest of the system configuration can
##  be executed in a semi-automatic fashion.
##

# do it

function bootstrapConf
{
    case "$1" in
      (1 | bootstrap)
        listOptions 1 bootstrap;
        quit;
        ;;

      (1.1 | rootPassword)
        error "Do this step by-hand";
        quit 1;

        note "Set root password ...";
        (
            echo "... create subdirectories in ${HOME}";
            umask 0002 && cd && mkdir -p keep/etc || exit 1;

            echo "... save passwd and group files (quickly)";
            cp -pf /etc/group /etc/passwd keep/etc/ || exit 1;

            echo "... set root password";
            sudo passwd root || exit 1;

            echo "... change default group";
            sudo usermod -g users "${USER}" || exit 1;

            printf "%-23s %-7s %-23s\n" "$(date +"%x %X")" 1.1 rootPassword >> keep/sysconf;
            echo "... logout and back in again - continue with step 1.2 (mountSysconf)";
        )
        ;;

      (1.2 | mountSysconf)
        error "Do this step by-hand";
        quit 1;

        note "Mount sysconf install share ...";
        (
            echo "... create subdirectories in ${HOME}";
            umask 0002 && cd && mkdir -p keep/dpkg || exit 1;

            echo "... quick save of package list";
            dpkg -l > keep/dpkg/$(date +'%y-%m-%d').a.initial || exit 1;

            echo "... just in case these are missing";
            sudo apt-get install openssh-server || exit 1;
            sudo apt-get install nfs-common || exit 1;

            echo "... mount the installation share";
            sudo mkdir -p /media/share/linux || exit 1;
            sudo mount "${NFS_HOST}:/export/share/linux" /media/share/linux || exit 1;

            printf "%-23s %-7s %-23s\n" "$(date +"%x %X")" 1.2 mountSysconf >> keep/sysconf;
            echo "... done";
        )
        ;;

      (1.3 | installScripts)
        error "Do this step by-hand";
        quit 1;

        note "Install shell scripts ...";
        (
            echo "... create subdirectories in ${HOME}";
            umask 0002 && cd && mkdir -p bin tmp || exit 1;

            echo "... install sysconf in ${HOME}/bin";
            cp -pf "${installShare}/sysconf/bin/sysconf" bin || exit 1;

            echo "... install general purpose scripts in ${HOME}/bin";
            cp -pdfL $(ls -d "${installShare}/bin/"*[^~] | fgrep -v 'bin.') bin || exit 1;

            echo "... install administration script in ${HOME}/bin";
            cp -pdfL "${installShare}/bin/bin.adm/"*[^~] bin || exit 1;

            printf "%-23s %-7s %-23s\n" "$(date +"%x %X")" 1.3 installScripts >> keep/sysconf;
            echo "... now run: bin/sysconf bashProfile";
        )
        ;;

      (1.4 | bashProfile)
        step="1.4 bashProfile";
        note "Configure bash profiles ...";

        DoOrDie mkdir -p keep/bash;

        local file;
        for file in .profile .bash_logout .bashrc; do
            if [[ -e "${file}" && ! -h "${file}" ]]; then
                DoOrDie mv -f "${file}" keep/bash/;
            fi
        done

        DoOrDie ln -s bin/bash* .;
        DoOrDie mv bashrc .bashrc;
        DoOrDie mv bash_logout .bash_logout;
        DoOrDie mv bash_profile .profile;

        fini="logout and back in again";
        ;;

      (1.5 | initialSave)
        step="1.5 initialSave";
        note "Initial save of files ...";

        echo "... save passwd and group files (properly)";
        local file;
        for file in /etc/group /etc/passwd; do
            if [[ -e "keep/${file}" ]]; then
                DoOrDie mv "keep/${file}"{,.${RELEASE}};
            fi
        done

        echo "... save installation package list";
        DoOrDie mkdir -p keep/dpkg;
        DoOrDieLocal dpkglistsave "install.${RELEASE}";

        echo "... backup grub configuration";
        DoOrDie CopyToKeep /boot/grub/grub.cfg;
        if [[ -e /boot/grub/device.map ]]; then
            DoOrDie CopyToKeep /boot/grub/device.map;
        fi
        ;;

      (1.6 | numlockOn)
        step="1.6 numlockOn";
        note "Configure the console keyboard ...";

        DoOrDie CopyToKeep /etc/kbd/config;
        DoOrDie ApplyPatch /etc/kbd/config;
        ;;

      (1.99)
        step="1.99 sanityCheck";
        note "Checking bootstrap ...";
        ListLoggedSteps ${1%.*} | while read step name status; do
            echo -e $step $name $status
            case "$step $name" in
              ("1.1 rootPassword")
                CheckCurrent /etc/{group,passwd};
                ;;
              ("1.5 initialSave")
                CheckOriginal /etc/{group,passwd};
                CheckOriginal /boot/grub/grub.cfg;
                CheckOriginal --opt /boot/grub/device.map;
                ;;
              ("1.6 numlockOn")
                CheckOriginal /etc/kbd/config;
                CheckPatch /etc/kbd/config;
                ;;
            esac
        done
        quit;
        ;;

      (*)
        badOption "$1";
        listOptions 1 bootstrap;
        quit 1;
        ;;
    esac
}

### Local Variables: ***
### mode:ksh ***
### End: ***
